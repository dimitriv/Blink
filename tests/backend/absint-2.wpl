fun comp test() {
  a <- take;
  b <- take;
  c <- take;

  let eval_1 = a + b;
  let eval_2 = var x : complex in {
                   x.re := b;
                   x.im := c;
                   return x;
                 }
  let eval_3 = var x : int in {
                   for i in [0,10] {
                       println i, ":", x;
                       if (i & 1 != 0) then {
                         x := x + a;
                       } else {
                         x := x + b;
                       }
                     }
                   return x;
                 }
  let eval_4 = var x : arr[3] int in {
                    x[0] := a;
                    x[1] := b;
                    x[2] := c;
                    -- x[3] := 0; will give interpreter error
                    return x;
                  }

  emit  eval_1;
  emit  eval_2.re;
  emit  eval_2.im;
  emit  eval_3;
--  emits eval_4; -- Codegen cannot handle this yet
}

let comp main = read[int] >>> test() >>> write[int];
