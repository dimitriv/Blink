/*
Copyright (c) Microsoft Corporation
All rights reserved.

Licensed under the Apache License, Version 2.0 (the ""License""); you
may not use this file except in compliance with the License. You may
obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR
CONDITIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT
LIMITATION ANY IMPLIED WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR
A PARTICULAR PURPOSE, MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing
permissions and limitations under the License.
*/
#include <sora.h>
#include <vector128.h>
#include <fft.h>


// Computer-generated tables for calculating FFT/IFFT on 12x2^n

__declspec(selectany) __declspec(align(16)) extern const
COMPLEX16 wFFTLUT12_1[] =
{
	{ 32767, 0 },
	{ 28378, -16384 },
	{ 16384, -28378 },
	{ 0, -32767 },
};
template<> DSP_INLINE const vcs* FFT_GetTwiddleConst<12, 1>() { return (vcs*)wFFTLUT12_1; }
__declspec(selectany) __declspec(align(16)) extern const
COMPLEX16 wFFTLUT12_2[] =
{
	{ 32767, 0 },
	{ 16384, -28378 },
	{ -16384, -28378 },
	{ -32767, 0 },
};
template<> DSP_INLINE const vcs* FFT_GetTwiddleConst<12, 2>() { return (vcs*)wFFTLUT12_2; }
__declspec(selectany) __declspec(align(16)) extern const
COMPLEX16 wFFTLUT24_1[] =
{
	{ 32767, 0 },
	{ 31651, -8481 },
	{ 28378, -16384 },
	{ 23170, -23170 },
	{ 16384, -28378 },
	{ 8481, -31651 },
	{ 0, -32767 },
	{ -8481, -31651 },
};
template<> DSP_INLINE const vcs* FFT_GetTwiddleConst<24, 1>() { return (vcs*)wFFTLUT24_1; }
__declspec(selectany) __declspec(align(16)) extern const
COMPLEX16 wFFTLUT24_2[] =
{
	{ 32767, 0 },
	{ 28378, -16384 },
	{ 16384, -28378 },
	{ 0, -32767 },
	{ -16384, -28378 },
	{ -28378, -16384 },
	{ -32767, 0 },
	{ -28378, 16384 },
};
template<> DSP_INLINE const vcs* FFT_GetTwiddleConst<24, 2>() { return (vcs*)wFFTLUT24_2; }
__declspec(selectany) __declspec(align(16)) extern const
COMPLEX16 wFFTLUT48_1[] =
{
	{ 32767, 0 },
	{ 32488, -4277 },
	{ 31651, -8481 },
	{ 30274, -12540 },
	{ 28378, -16384 },
	{ 25997, -19948 },
	{ 23170, -23170 },
	{ 19948, -25997 },
	{ 16384, -28378 },
	{ 12540, -30274 },
	{ 8481, -31651 },
	{ 4277, -32488 },
};
template<> DSP_INLINE const vcs* FFT_GetTwiddleConst<48, 1>() { return (vcs*)wFFTLUT48_1; }
__declspec(selectany) __declspec(align(16)) extern const
COMPLEX16 wFFTLUT48_2[] =
{
	{ 32767, 0 },
	{ 31651, -8481 },
	{ 28378, -16384 },
	{ 23170, -23170 },
	{ 16384, -28378 },
	{ 8481, -31651 },
	{ 0, -32767 },
	{ -8481, -31651 },
	{ -16384, -28378 },
	{ -23170, -23170 },
	{ -28378, -16384 },
	{ -31651, -8481 },
};
template<> DSP_INLINE const vcs* FFT_GetTwiddleConst<48, 2>() { return (vcs*)wFFTLUT48_2; }
__declspec(selectany) __declspec(align(16)) extern const
COMPLEX16 wFFTLUT48_3[] =
{
	{ 32767, 0 },
	{ 30274, -12540 },
	{ 23170, -23170 },
	{ 12540, -30274 },
	{ 0, -32767 },
	{ -12540, -30274 },
	{ -23170, -23170 },
	{ -30274, -12540 },
	{ -32767, 0 },
	{ -30274, 12540 },
	{ -23170, 23170 },
	{ -12540, 30274 },
};
template<> DSP_INLINE const vcs* FFT_GetTwiddleConst<48, 3>() { return (vcs*)wFFTLUT48_3; }
__declspec(selectany) __declspec(align(16)) extern const
COMPLEX16 wFFTLUT96_1[] =
{
	{ 32767, 0 },
	{ 32698, -2143 },
	{ 32488, -4277 },
	{ 32138, -6393 },
	{ 31651, -8481 },
	{ 31029, -10533 },
	{ 30274, -12540 },
	{ 29389, -14493 },
	{ 28378, -16384 },
	{ 27246, -18205 },
	{ 25997, -19948 },
	{ 24636, -21605 },
	{ 23170, -23170 },
	{ 21605, -24636 },
	{ 19948, -25997 },
	{ 18205, -27246 },
	{ 16384, -28378 },
	{ 14493, -29389 },
	{ 12540, -30274 },
	{ 10533, -31029 },
	{ 8481, -31651 },
	{ 6393, -32138 },
	{ 4277, -32488 },
	{ 2143, -32698 },
};
template<> DSP_INLINE const vcs* FFT_GetTwiddleConst<96, 1>() { return (vcs*)wFFTLUT96_1; }
__declspec(selectany) __declspec(align(16)) extern const
COMPLEX16 wFFTLUT96_2[] =
{
	{ 32767, 0 },
	{ 32488, -4277 },
	{ 31651, -8481 },
	{ 30274, -12540 },
	{ 28378, -16384 },
	{ 25997, -19948 },
	{ 23170, -23170 },
	{ 19948, -25997 },
	{ 16384, -28378 },
	{ 12540, -30274 },
	{ 8481, -31651 },
	{ 4277, -32488 },
	{ 0, -32767 },
	{ -4277, -32488 },
	{ -8481, -31651 },
	{ -12540, -30274 },
	{ -16384, -28378 },
	{ -19948, -25997 },
	{ -23170, -23170 },
	{ -25997, -19948 },
	{ -28378, -16384 },
	{ -30274, -12540 },
	{ -31651, -8481 },
	{ -32488, -4277 },
};
template<> DSP_INLINE const vcs* FFT_GetTwiddleConst<96, 2>() { return (vcs*)wFFTLUT96_2; }
__declspec(selectany) __declspec(align(16)) extern const
COMPLEX16 wFFTLUT96_3[] =
{
	{ 32767, 0 },
	{ 32138, -6393 },
	{ 30274, -12540 },
	{ 27246, -18205 },
	{ 23170, -23170 },
	{ 18205, -27246 },
	{ 12540, -30274 },
	{ 6393, -32138 },
	{ 0, -32767 },
	{ -6393, -32138 },
	{ -12540, -30274 },
	{ -18205, -27246 },
	{ -23170, -23170 },
	{ -27246, -18205 },
	{ -30274, -12540 },
	{ -32138, -6393 },
	{ -32767, 0 },
	{ -32138, 6393 },
	{ -30274, 12540 },
	{ -27246, 18205 },
	{ -23170, 23170 },
	{ -18205, 27246 },
	{ -12540, 30274 },
	{ -6393, 32138 },
};
template<> DSP_INLINE const vcs* FFT_GetTwiddleConst<96, 3>() { return (vcs*)wFFTLUT96_3; }
__declspec(selectany) __declspec(align(16)) extern const
COMPLEX16 wFFTLUT192_1[] =
{
	{ 32767, 0 },
	{ 32750, -1072 },
	{ 32698, -2143 },
	{ 32610, -3212 },
	{ 32488, -4277 },
	{ 32330, -5338 },
	{ 32138, -6393 },
	{ 31912, -7441 },
	{ 31651, -8481 },
	{ 31357, -9512 },
	{ 31029, -10533 },
	{ 30668, -11543 },
	{ 30274, -12540 },
	{ 29847, -13524 },
	{ 29389, -14493 },
	{ 28899, -15447 },
	{ 28378, -16384 },
	{ 27827, -17304 },
	{ 27246, -18205 },
	{ 26635, -19087 },
	{ 25997, -19948 },
	{ 25330, -20788 },
	{ 24636, -21605 },
	{ 23916, -22400 },
	{ 23170, -23170 },
	{ 22400, -23916 },
	{ 21605, -24636 },
	{ 20788, -25330 },
	{ 19948, -25997 },
	{ 19087, -26635 },
	{ 18205, -27246 },
	{ 17304, -27827 },
	{ 16384, -28378 },
	{ 15447, -28899 },
	{ 14493, -29389 },
	{ 13524, -29847 },
	{ 12540, -30274 },
	{ 11543, -30668 },
	{ 10533, -31029 },
	{ 9512, -31357 },
	{ 8481, -31651 },
	{ 7441, -31912 },
	{ 6393, -32138 },
	{ 5338, -32330 },
	{ 4277, -32488 },
	{ 3212, -32610 },
	{ 2143, -32698 },
	{ 1072, -32750 },
};
template<> DSP_INLINE const vcs* FFT_GetTwiddleConst<192, 1>() { return (vcs*)wFFTLUT192_1; }
__declspec(selectany) __declspec(align(16)) extern const
COMPLEX16 wFFTLUT192_2[] =
{
	{ 32767, 0 },
	{ 32698, -2143 },
	{ 32488, -4277 },
	{ 32138, -6393 },
	{ 31651, -8481 },
	{ 31029, -10533 },
	{ 30274, -12540 },
	{ 29389, -14493 },
	{ 28378, -16384 },
	{ 27246, -18205 },
	{ 25997, -19948 },
	{ 24636, -21605 },
	{ 23170, -23170 },
	{ 21605, -24636 },
	{ 19948, -25997 },
	{ 18205, -27246 },
	{ 16384, -28378 },
	{ 14493, -29389 },
	{ 12540, -30274 },
	{ 10533, -31029 },
	{ 8481, -31651 },
	{ 6393, -32138 },
	{ 4277, -32488 },
	{ 2143, -32698 },
	{ 0, -32767 },
	{ -2143, -32698 },
	{ -4277, -32488 },
	{ -6393, -32138 },
	{ -8481, -31651 },
	{ -10533, -31029 },
	{ -12540, -30274 },
	{ -14493, -29389 },
	{ -16384, -28378 },
	{ -18205, -27246 },
	{ -19948, -25997 },
	{ -21605, -24636 },
	{ -23170, -23170 },
	{ -24636, -21605 },
	{ -25997, -19948 },
	{ -27246, -18205 },
	{ -28378, -16384 },
	{ -29389, -14493 },
	{ -30274, -12540 },
	{ -31029, -10533 },
	{ -31651, -8481 },
	{ -32138, -6393 },
	{ -32488, -4277 },
	{ -32698, -2143 },
};
template<> DSP_INLINE const vcs* FFT_GetTwiddleConst<192, 2>() { return (vcs*)wFFTLUT192_2; }
__declspec(selectany) __declspec(align(16)) extern const
COMPLEX16 wFFTLUT192_3[] =
{
	{ 32767, 0 },
	{ 32610, -3212 },
	{ 32138, -6393 },
	{ 31357, -9512 },
	{ 30274, -12540 },
	{ 28899, -15447 },
	{ 27246, -18205 },
	{ 25330, -20788 },
	{ 23170, -23170 },
	{ 20788, -25330 },
	{ 18205, -27246 },
	{ 15447, -28899 },
	{ 12540, -30274 },
	{ 9512, -31357 },
	{ 6393, -32138 },
	{ 3212, -32610 },
	{ 0, -32767 },
	{ -3212, -32610 },
	{ -6393, -32138 },
	{ -9512, -31357 },
	{ -12540, -30274 },
	{ -15447, -28899 },
	{ -18205, -27246 },
	{ -20788, -25330 },
	{ -23170, -23170 },
	{ -25330, -20788 },
	{ -27246, -18205 },
	{ -28899, -15447 },
	{ -30274, -12540 },
	{ -31357, -9512 },
	{ -32138, -6393 },
	{ -32610, -3212 },
	{ -32767, 0 },
	{ -32610, 3212 },
	{ -32138, 6393 },
	{ -31357, 9512 },
	{ -30274, 12540 },
	{ -28899, 15447 },
	{ -27246, 18205 },
	{ -25330, 20788 },
	{ -23170, 23170 },
	{ -20788, 25330 },
	{ -18205, 27246 },
	{ -15447, 28899 },
	{ -12540, 30274 },
	{ -9512, 31357 },
	{ -6393, 32138 },
	{ -3212, 32610 },
};
template<> DSP_INLINE const vcs* FFT_GetTwiddleConst<192, 3>() { return (vcs*)wFFTLUT192_3; }
__declspec(selectany) __declspec(align(16)) extern const
COMPLEX16 wFFTLUT384_1[] =
{
	{ 32767, 0 },
	{ 32764, -536 },
	{ 32750, -1072 },
	{ 32729, -1608 },
	{ 32698, -2143 },
	{ 32658, -2678 },
	{ 32610, -3212 },
	{ 32553, -3745 },
	{ 32488, -4277 },
	{ 32413, -4808 },
	{ 32330, -5338 },
	{ 32239, -5866 },
	{ 32138, -6393 },
	{ 32029, -6918 },
	{ 31912, -7441 },
	{ 31786, -7962 },
	{ 31651, -8481 },
	{ 31508, -8998 },
	{ 31357, -9512 },
	{ 31197, -10024 },
	{ 31029, -10533 },
	{ 30853, -11039 },
	{ 30668, -11543 },
	{ 30475, -12043 },
	{ 30274, -12540 },
	{ 30064, -13033 },
	{ 29847, -13524 },
	{ 29622, -14010 },
	{ 29389, -14493 },
	{ 29148, -14972 },
	{ 28899, -15447 },
	{ 28642, -15917 },
	{ 28378, -16384 },
	{ 28106, -16846 },
	{ 27827, -17304 },
	{ 27540, -17757 },
	{ 27246, -18205 },
	{ 26944, -18648 },
	{ 26635, -19087 },
	{ 26320, -19520 },
	{ 25997, -19948 },
	{ 25667, -20371 },
	{ 25330, -20788 },
	{ 24986, -21199 },
	{ 24636, -21605 },
	{ 24279, -22006 },
	{ 23916, -22400 },
	{ 23546, -22788 },
	{ 23170, -23170 },
	{ 22788, -23546 },
	{ 22400, -23916 },
	{ 22006, -24279 },
	{ 21605, -24636 },
	{ 21199, -24986 },
	{ 20788, -25330 },
	{ 20371, -25667 },
	{ 19948, -25997 },
	{ 19520, -26320 },
	{ 19087, -26635 },
	{ 18648, -26944 },
	{ 18205, -27246 },
	{ 17757, -27540 },
	{ 17304, -27827 },
	{ 16846, -28106 },
	{ 16384, -28378 },
	{ 15917, -28642 },
	{ 15447, -28899 },
	{ 14972, -29148 },
	{ 14493, -29389 },
	{ 14010, -29622 },
	{ 13524, -29847 },
	{ 13033, -30064 },
	{ 12540, -30274 },
	{ 12043, -30475 },
	{ 11543, -30668 },
	{ 11039, -30853 },
	{ 10533, -31029 },
	{ 10024, -31197 },
	{ 9512, -31357 },
	{ 8998, -31508 },
	{ 8481, -31651 },
	{ 7962, -31786 },
	{ 7441, -31912 },
	{ 6918, -32029 },
	{ 6393, -32138 },
	{ 5866, -32239 },
	{ 5338, -32330 },
	{ 4808, -32413 },
	{ 4277, -32488 },
	{ 3745, -32553 },
	{ 3212, -32610 },
	{ 2678, -32658 },
	{ 2143, -32698 },
	{ 1608, -32729 },
	{ 1072, -32750 },
	{ 536, -32764 },
};
template<> DSP_INLINE const vcs* FFT_GetTwiddleConst<384, 1>() { return (vcs*)wFFTLUT384_1; }
__declspec(selectany) __declspec(align(16)) extern const
COMPLEX16 wFFTLUT384_2[] =
{
	{ 32767, 0 },
	{ 32750, -1072 },
	{ 32698, -2143 },
	{ 32610, -3212 },
	{ 32488, -4277 },
	{ 32330, -5338 },
	{ 32138, -6393 },
	{ 31912, -7441 },
	{ 31651, -8481 },
	{ 31357, -9512 },
	{ 31029, -10533 },
	{ 30668, -11543 },
	{ 30274, -12540 },
	{ 29847, -13524 },
	{ 29389, -14493 },
	{ 28899, -15447 },
	{ 28378, -16384 },
	{ 27827, -17304 },
	{ 27246, -18205 },
	{ 26635, -19087 },
	{ 25997, -19948 },
	{ 25330, -20788 },
	{ 24636, -21605 },
	{ 23916, -22400 },
	{ 23170, -23170 },
	{ 22400, -23916 },
	{ 21605, -24636 },
	{ 20788, -25330 },
	{ 19948, -25997 },
	{ 19087, -26635 },
	{ 18205, -27246 },
	{ 17304, -27827 },
	{ 16384, -28378 },
	{ 15447, -28899 },
	{ 14493, -29389 },
	{ 13524, -29847 },
	{ 12540, -30274 },
	{ 11543, -30668 },
	{ 10533, -31029 },
	{ 9512, -31357 },
	{ 8481, -31651 },
	{ 7441, -31912 },
	{ 6393, -32138 },
	{ 5338, -32330 },
	{ 4277, -32488 },
	{ 3212, -32610 },
	{ 2143, -32698 },
	{ 1072, -32750 },
	{ 0, -32767 },
	{ -1072, -32750 },
	{ -2143, -32698 },
	{ -3212, -32610 },
	{ -4277, -32488 },
	{ -5338, -32330 },
	{ -6393, -32138 },
	{ -7441, -31912 },
	{ -8481, -31651 },
	{ -9512, -31357 },
	{ -10533, -31029 },
	{ -11543, -30668 },
	{ -12540, -30274 },
	{ -13524, -29847 },
	{ -14493, -29389 },
	{ -15447, -28899 },
	{ -16384, -28378 },
	{ -17304, -27827 },
	{ -18205, -27246 },
	{ -19087, -26635 },
	{ -19948, -25997 },
	{ -20788, -25330 },
	{ -21605, -24636 },
	{ -22400, -23916 },
	{ -23170, -23170 },
	{ -23916, -22400 },
	{ -24636, -21605 },
	{ -25330, -20788 },
	{ -25997, -19948 },
	{ -26635, -19087 },
	{ -27246, -18205 },
	{ -27827, -17304 },
	{ -28378, -16384 },
	{ -28899, -15447 },
	{ -29389, -14493 },
	{ -29847, -13524 },
	{ -30274, -12540 },
	{ -30668, -11543 },
	{ -31029, -10533 },
	{ -31357, -9512 },
	{ -31651, -8481 },
	{ -31912, -7441 },
	{ -32138, -6393 },
	{ -32330, -5338 },
	{ -32488, -4277 },
	{ -32610, -3212 },
	{ -32698, -2143 },
	{ -32750, -1072 },
};
template<> DSP_INLINE const vcs* FFT_GetTwiddleConst<384, 2>() { return (vcs*)wFFTLUT384_2; }
__declspec(selectany) __declspec(align(16)) extern const
COMPLEX16 wFFTLUT384_3[] =
{
	{ 32767, 0 },
	{ 32729, -1608 },
	{ 32610, -3212 },
	{ 32413, -4808 },
	{ 32138, -6393 },
	{ 31786, -7962 },
	{ 31357, -9512 },
	{ 30853, -11039 },
	{ 30274, -12540 },
	{ 29622, -14010 },
	{ 28899, -15447 },
	{ 28106, -16846 },
	{ 27246, -18205 },
	{ 26320, -19520 },
	{ 25330, -20788 },
	{ 24279, -22006 },
	{ 23170, -23170 },
	{ 22006, -24279 },
	{ 20788, -25330 },
	{ 19520, -26320 },
	{ 18205, -27246 },
	{ 16846, -28106 },
	{ 15447, -28899 },
	{ 14010, -29622 },
	{ 12540, -30274 },
	{ 11039, -30853 },
	{ 9512, -31357 },
	{ 7962, -31786 },
	{ 6393, -32138 },
	{ 4808, -32413 },
	{ 3212, -32610 },
	{ 1608, -32729 },
	{ 0, -32767 },
	{ -1608, -32729 },
	{ -3212, -32610 },
	{ -4808, -32413 },
	{ -6393, -32138 },
	{ -7962, -31786 },
	{ -9512, -31357 },
	{ -11039, -30853 },
	{ -12540, -30274 },
	{ -14010, -29622 },
	{ -15447, -28899 },
	{ -16846, -28106 },
	{ -18205, -27246 },
	{ -19520, -26320 },
	{ -20788, -25330 },
	{ -22006, -24279 },
	{ -23170, -23170 },
	{ -24279, -22006 },
	{ -25330, -20788 },
	{ -26320, -19520 },
	{ -27246, -18205 },
	{ -28106, -16846 },
	{ -28899, -15447 },
	{ -29622, -14010 },
	{ -30274, -12540 },
	{ -30853, -11039 },
	{ -31357, -9512 },
	{ -31786, -7962 },
	{ -32138, -6393 },
	{ -32413, -4808 },
	{ -32610, -3212 },
	{ -32729, -1608 },
	{ -32767, 0 },
	{ -32729, 1608 },
	{ -32610, 3212 },
	{ -32413, 4808 },
	{ -32138, 6393 },
	{ -31786, 7962 },
	{ -31357, 9512 },
	{ -30853, 11039 },
	{ -30274, 12540 },
	{ -29622, 14010 },
	{ -28899, 15447 },
	{ -28106, 16846 },
	{ -27246, 18205 },
	{ -26320, 19520 },
	{ -25330, 20788 },
	{ -24279, 22006 },
	{ -23170, 23170 },
	{ -22006, 24279 },
	{ -20788, 25330 },
	{ -19520, 26320 },
	{ -18205, 27246 },
	{ -16846, 28106 },
	{ -15447, 28899 },
	{ -14010, 29622 },
	{ -12540, 30274 },
	{ -11039, 30853 },
	{ -9512, 31357 },
	{ -7962, 31786 },
	{ -6393, 32138 },
	{ -4808, 32413 },
	{ -3212, 32610 },
	{ -1608, 32729 },
};
template<> DSP_INLINE const vcs* FFT_GetTwiddleConst<384, 3>() { return (vcs*)wFFTLUT384_3; }
__declspec(selectany) __declspec(align(16)) extern const
COMPLEX16 wFFTLUT768_1[] =
{
	{ 32767, 0 },
	{ 32767, -268 },
	{ 32764, -536 },
	{ 32758, -804 },
	{ 32750, -1072 },
	{ 32741, -1340 },
	{ 32729, -1608 },
	{ 32714, -1876 },
	{ 32698, -2143 },
	{ 32679, -2411 },
	{ 32658, -2678 },
	{ 32635, -2945 },
	{ 32610, -3212 },
	{ 32583, -3479 },
	{ 32553, -3745 },
	{ 32522, -4011 },
	{ 32488, -4277 },
	{ 32452, -4543 },
	{ 32413, -4808 },
	{ 32373, -5073 },
	{ 32330, -5338 },
	{ 32286, -5602 },
	{ 32239, -5866 },
	{ 32190, -6130 },
	{ 32138, -6393 },
	{ 32085, -6655 },
	{ 32029, -6918 },
	{ 31972, -7180 },
	{ 31912, -7441 },
	{ 31850, -7702 },
	{ 31786, -7962 },
	{ 31720, -8222 },
	{ 31651, -8481 },
	{ 31581, -8740 },
	{ 31508, -8998 },
	{ 31434, -9255 },
	{ 31357, -9512 },
	{ 31278, -9768 },
	{ 31197, -10024 },
	{ 31114, -10279 },
	{ 31029, -10533 },
	{ 30942, -10786 },
	{ 30853, -11039 },
	{ 30761, -11291 },
	{ 30668, -11543 },
	{ 30572, -11793 },
	{ 30475, -12043 },
	{ 30375, -12292 },
	{ 30274, -12540 },
	{ 30170, -12787 },
	{ 30064, -13033 },
	{ 29957, -13279 },
	{ 29847, -13524 },
	{ 29736, -13767 },
	{ 29622, -14010 },
	{ 29506, -14252 },
	{ 29389, -14493 },
	{ 29269, -14733 },
	{ 29148, -14972 },
	{ 29024, -15210 },
	{ 28899, -15447 },
	{ 28771, -15683 },
	{ 28642, -15917 },
	{ 28511, -16151 },
	{ 28378, -16384 },
	{ 28243, -16616 },
	{ 28106, -16846 },
	{ 27967, -17075 },
	{ 27827, -17304 },
	{ 27684, -17531 },
	{ 27540, -17757 },
	{ 27394, -17981 },
	{ 27246, -18205 },
	{ 27096, -18427 },
	{ 26944, -18648 },
	{ 26791, -18868 },
	{ 26635, -19087 },
	{ 26478, -19304 },
	{ 26320, -19520 },
	{ 26159, -19735 },
	{ 25997, -19948 },
	{ 25833, -20160 },
	{ 25667, -20371 },
	{ 25499, -20580 },
	{ 25330, -20788 },
	{ 25159, -20994 },
	{ 24986, -21199 },
	{ 24812, -21403 },
	{ 24636, -21605 },
	{ 24459, -21806 },
	{ 24279, -22006 },
	{ 24099, -22204 },
	{ 23916, -22400 },
	{ 23732, -22595 },
	{ 23546, -22788 },
	{ 23359, -22980 },
	{ 23170, -23170 },
	{ 22980, -23359 },
	{ 22788, -23546 },
	{ 22595, -23732 },
	{ 22400, -23916 },
	{ 22204, -24099 },
	{ 22006, -24279 },
	{ 21806, -24459 },
	{ 21605, -24636 },
	{ 21403, -24812 },
	{ 21199, -24986 },
	{ 20994, -25159 },
	{ 20788, -25330 },
	{ 20580, -25499 },
	{ 20371, -25667 },
	{ 20160, -25833 },
	{ 19948, -25997 },
	{ 19735, -26159 },
	{ 19520, -26320 },
	{ 19304, -26478 },
	{ 19087, -26635 },
	{ 18868, -26791 },
	{ 18648, -26944 },
	{ 18427, -27096 },
	{ 18205, -27246 },
	{ 17981, -27394 },
	{ 17757, -27540 },
	{ 17531, -27684 },
	{ 17304, -27827 },
	{ 17075, -27967 },
	{ 16846, -28106 },
	{ 16616, -28243 },
	{ 16384, -28378 },
	{ 16151, -28511 },
	{ 15917, -28642 },
	{ 15683, -28771 },
	{ 15447, -28899 },
	{ 15210, -29024 },
	{ 14972, -29148 },
	{ 14733, -29269 },
	{ 14493, -29389 },
	{ 14252, -29506 },
	{ 14010, -29622 },
	{ 13767, -29736 },
	{ 13524, -29847 },
	{ 13279, -29957 },
	{ 13033, -30064 },
	{ 12787, -30170 },
	{ 12540, -30274 },
	{ 12292, -30375 },
	{ 12043, -30475 },
	{ 11793, -30572 },
	{ 11543, -30668 },
	{ 11291, -30761 },
	{ 11039, -30853 },
	{ 10786, -30942 },
	{ 10533, -31029 },
	{ 10279, -31114 },
	{ 10024, -31197 },
	{ 9768, -31278 },
	{ 9512, -31357 },
	{ 9255, -31434 },
	{ 8998, -31508 },
	{ 8740, -31581 },
	{ 8481, -31651 },
	{ 8222, -31720 },
	{ 7962, -31786 },
	{ 7702, -31850 },
	{ 7441, -31912 },
	{ 7180, -31972 },
	{ 6918, -32029 },
	{ 6655, -32085 },
	{ 6393, -32138 },
	{ 6130, -32190 },
	{ 5866, -32239 },
	{ 5602, -32286 },
	{ 5338, -32330 },
	{ 5073, -32373 },
	{ 4808, -32413 },
	{ 4543, -32452 },
	{ 4277, -32488 },
	{ 4011, -32522 },
	{ 3745, -32553 },
	{ 3479, -32583 },
	{ 3212, -32610 },
	{ 2945, -32635 },
	{ 2678, -32658 },
	{ 2411, -32679 },
	{ 2143, -32698 },
	{ 1876, -32714 },
	{ 1608, -32729 },
	{ 1340, -32741 },
	{ 1072, -32750 },
	{ 804, -32758 },
	{ 536, -32764 },
	{ 268, -32767 },
};
template<> DSP_INLINE const vcs* FFT_GetTwiddleConst<768, 1>() { return (vcs*)wFFTLUT768_1; }
__declspec(selectany) __declspec(align(16)) extern const
COMPLEX16 wFFTLUT768_2[] =
{
	{ 32767, 0 },
	{ 32764, -536 },
	{ 32750, -1072 },
	{ 32729, -1608 },
	{ 32698, -2143 },
	{ 32658, -2678 },
	{ 32610, -3212 },
	{ 32553, -3745 },
	{ 32488, -4277 },
	{ 32413, -4808 },
	{ 32330, -5338 },
	{ 32239, -5866 },
	{ 32138, -6393 },
	{ 32029, -6918 },
	{ 31912, -7441 },
	{ 31786, -7962 },
	{ 31651, -8481 },
	{ 31508, -8998 },
	{ 31357, -9512 },
	{ 31197, -10024 },
	{ 31029, -10533 },
	{ 30853, -11039 },
	{ 30668, -11543 },
	{ 30475, -12043 },
	{ 30274, -12540 },
	{ 30064, -13033 },
	{ 29847, -13524 },
	{ 29622, -14010 },
	{ 29389, -14493 },
	{ 29148, -14972 },
	{ 28899, -15447 },
	{ 28642, -15917 },
	{ 28378, -16384 },
	{ 28106, -16846 },
	{ 27827, -17304 },
	{ 27540, -17757 },
	{ 27246, -18205 },
	{ 26944, -18648 },
	{ 26635, -19087 },
	{ 26320, -19520 },
	{ 25997, -19948 },
	{ 25667, -20371 },
	{ 25330, -20788 },
	{ 24986, -21199 },
	{ 24636, -21605 },
	{ 24279, -22006 },
	{ 23916, -22400 },
	{ 23546, -22788 },
	{ 23170, -23170 },
	{ 22788, -23546 },
	{ 22400, -23916 },
	{ 22006, -24279 },
	{ 21605, -24636 },
	{ 21199, -24986 },
	{ 20788, -25330 },
	{ 20371, -25667 },
	{ 19948, -25997 },
	{ 19520, -26320 },
	{ 19087, -26635 },
	{ 18648, -26944 },
	{ 18205, -27246 },
	{ 17757, -27540 },
	{ 17304, -27827 },
	{ 16846, -28106 },
	{ 16384, -28378 },
	{ 15917, -28642 },
	{ 15447, -28899 },
	{ 14972, -29148 },
	{ 14493, -29389 },
	{ 14010, -29622 },
	{ 13524, -29847 },
	{ 13033, -30064 },
	{ 12540, -30274 },
	{ 12043, -30475 },
	{ 11543, -30668 },
	{ 11039, -30853 },
	{ 10533, -31029 },
	{ 10024, -31197 },
	{ 9512, -31357 },
	{ 8998, -31508 },
	{ 8481, -31651 },
	{ 7962, -31786 },
	{ 7441, -31912 },
	{ 6918, -32029 },
	{ 6393, -32138 },
	{ 5866, -32239 },
	{ 5338, -32330 },
	{ 4808, -32413 },
	{ 4277, -32488 },
	{ 3745, -32553 },
	{ 3212, -32610 },
	{ 2678, -32658 },
	{ 2143, -32698 },
	{ 1608, -32729 },
	{ 1072, -32750 },
	{ 536, -32764 },
	{ 0, -32767 },
	{ -536, -32764 },
	{ -1072, -32750 },
	{ -1608, -32729 },
	{ -2143, -32698 },
	{ -2678, -32658 },
	{ -3212, -32610 },
	{ -3745, -32553 },
	{ -4277, -32488 },
	{ -4808, -32413 },
	{ -5338, -32330 },
	{ -5866, -32239 },
	{ -6393, -32138 },
	{ -6918, -32029 },
	{ -7441, -31912 },
	{ -7962, -31786 },
	{ -8481, -31651 },
	{ -8998, -31508 },
	{ -9512, -31357 },
	{ -10024, -31197 },
	{ -10533, -31029 },
	{ -11039, -30853 },
	{ -11543, -30668 },
	{ -12043, -30475 },
	{ -12540, -30274 },
	{ -13033, -30064 },
	{ -13524, -29847 },
	{ -14010, -29622 },
	{ -14493, -29389 },
	{ -14972, -29148 },
	{ -15447, -28899 },
	{ -15917, -28642 },
	{ -16384, -28378 },
	{ -16846, -28106 },
	{ -17304, -27827 },
	{ -17757, -27540 },
	{ -18205, -27246 },
	{ -18648, -26944 },
	{ -19087, -26635 },
	{ -19520, -26320 },
	{ -19948, -25997 },
	{ -20371, -25667 },
	{ -20788, -25330 },
	{ -21199, -24986 },
	{ -21605, -24636 },
	{ -22006, -24279 },
	{ -22400, -23916 },
	{ -22788, -23546 },
	{ -23170, -23170 },
	{ -23546, -22788 },
	{ -23916, -22400 },
	{ -24279, -22006 },
	{ -24636, -21605 },
	{ -24986, -21199 },
	{ -25330, -20788 },
	{ -25667, -20371 },
	{ -25997, -19948 },
	{ -26320, -19520 },
	{ -26635, -19087 },
	{ -26944, -18648 },
	{ -27246, -18205 },
	{ -27540, -17757 },
	{ -27827, -17304 },
	{ -28106, -16846 },
	{ -28378, -16384 },
	{ -28642, -15917 },
	{ -28899, -15447 },
	{ -29148, -14972 },
	{ -29389, -14493 },
	{ -29622, -14010 },
	{ -29847, -13524 },
	{ -30064, -13033 },
	{ -30274, -12540 },
	{ -30475, -12043 },
	{ -30668, -11543 },
	{ -30853, -11039 },
	{ -31029, -10533 },
	{ -31197, -10024 },
	{ -31357, -9512 },
	{ -31508, -8998 },
	{ -31651, -8481 },
	{ -31786, -7962 },
	{ -31912, -7441 },
	{ -32029, -6918 },
	{ -32138, -6393 },
	{ -32239, -5866 },
	{ -32330, -5338 },
	{ -32413, -4808 },
	{ -32488, -4277 },
	{ -32553, -3745 },
	{ -32610, -3212 },
	{ -32658, -2678 },
	{ -32698, -2143 },
	{ -32729, -1608 },
	{ -32750, -1072 },
	{ -32764, -536 },
};
template<> DSP_INLINE const vcs* FFT_GetTwiddleConst<768, 2>() { return (vcs*)wFFTLUT768_2; }
__declspec(selectany) __declspec(align(16)) extern const
COMPLEX16 wFFTLUT768_3[] =
{
	{ 32767, 0 },
	{ 32758, -804 },
	{ 32729, -1608 },
	{ 32679, -2411 },
	{ 32610, -3212 },
	{ 32522, -4011 },
	{ 32413, -4808 },
	{ 32286, -5602 },
	{ 32138, -6393 },
	{ 31972, -7180 },
	{ 31786, -7962 },
	{ 31581, -8740 },
	{ 31357, -9512 },
	{ 31114, -10279 },
	{ 30853, -11039 },
	{ 30572, -11793 },
	{ 30274, -12540 },
	{ 29957, -13279 },
	{ 29622, -14010 },
	{ 29269, -14733 },
	{ 28899, -15447 },
	{ 28511, -16151 },
	{ 28106, -16846 },
	{ 27684, -17531 },
	{ 27246, -18205 },
	{ 26791, -18868 },
	{ 26320, -19520 },
	{ 25833, -20160 },
	{ 25330, -20788 },
	{ 24812, -21403 },
	{ 24279, -22006 },
	{ 23732, -22595 },
	{ 23170, -23170 },
	{ 22595, -23732 },
	{ 22006, -24279 },
	{ 21403, -24812 },
	{ 20788, -25330 },
	{ 20160, -25833 },
	{ 19520, -26320 },
	{ 18868, -26791 },
	{ 18205, -27246 },
	{ 17531, -27684 },
	{ 16846, -28106 },
	{ 16151, -28511 },
	{ 15447, -28899 },
	{ 14733, -29269 },
	{ 14010, -29622 },
	{ 13279, -29957 },
	{ 12540, -30274 },
	{ 11793, -30572 },
	{ 11039, -30853 },
	{ 10279, -31114 },
	{ 9512, -31357 },
	{ 8740, -31581 },
	{ 7962, -31786 },
	{ 7180, -31972 },
	{ 6393, -32138 },
	{ 5602, -32286 },
	{ 4808, -32413 },
	{ 4011, -32522 },
	{ 3212, -32610 },
	{ 2411, -32679 },
	{ 1608, -32729 },
	{ 804, -32758 },
	{ 0, -32767 },
	{ -804, -32758 },
	{ -1608, -32729 },
	{ -2411, -32679 },
	{ -3212, -32610 },
	{ -4011, -32522 },
	{ -4808, -32413 },
	{ -5602, -32286 },
	{ -6393, -32138 },
	{ -7180, -31972 },
	{ -7962, -31786 },
	{ -8740, -31581 },
	{ -9512, -31357 },
	{ -10279, -31114 },
	{ -11039, -30853 },
	{ -11793, -30572 },
	{ -12540, -30274 },
	{ -13279, -29957 },
	{ -14010, -29622 },
	{ -14733, -29269 },
	{ -15447, -28899 },
	{ -16151, -28511 },
	{ -16846, -28106 },
	{ -17531, -27684 },
	{ -18205, -27246 },
	{ -18868, -26791 },
	{ -19520, -26320 },
	{ -20160, -25833 },
	{ -20788, -25330 },
	{ -21403, -24812 },
	{ -22006, -24279 },
	{ -22595, -23732 },
	{ -23170, -23170 },
	{ -23732, -22595 },
	{ -24279, -22006 },
	{ -24812, -21403 },
	{ -25330, -20788 },
	{ -25833, -20160 },
	{ -26320, -19520 },
	{ -26791, -18868 },
	{ -27246, -18205 },
	{ -27684, -17531 },
	{ -28106, -16846 },
	{ -28511, -16151 },
	{ -28899, -15447 },
	{ -29269, -14733 },
	{ -29622, -14010 },
	{ -29957, -13279 },
	{ -30274, -12540 },
	{ -30572, -11793 },
	{ -30853, -11039 },
	{ -31114, -10279 },
	{ -31357, -9512 },
	{ -31581, -8740 },
	{ -31786, -7962 },
	{ -31972, -7180 },
	{ -32138, -6393 },
	{ -32286, -5602 },
	{ -32413, -4808 },
	{ -32522, -4011 },
	{ -32610, -3212 },
	{ -32679, -2411 },
	{ -32729, -1608 },
	{ -32758, -804 },
	{ -32767, 0 },
	{ -32758, 804 },
	{ -32729, 1608 },
	{ -32679, 2411 },
	{ -32610, 3212 },
	{ -32522, 4011 },
	{ -32413, 4808 },
	{ -32286, 5602 },
	{ -32138, 6393 },
	{ -31972, 7180 },
	{ -31786, 7962 },
	{ -31581, 8740 },
	{ -31357, 9512 },
	{ -31114, 10279 },
	{ -30853, 11039 },
	{ -30572, 11793 },
	{ -30274, 12540 },
	{ -29957, 13279 },
	{ -29622, 14010 },
	{ -29269, 14733 },
	{ -28899, 15447 },
	{ -28511, 16151 },
	{ -28106, 16846 },
	{ -27684, 17531 },
	{ -27246, 18205 },
	{ -26791, 18868 },
	{ -26320, 19520 },
	{ -25833, 20160 },
	{ -25330, 20788 },
	{ -24812, 21403 },
	{ -24279, 22006 },
	{ -23732, 22595 },
	{ -23170, 23170 },
	{ -22595, 23732 },
	{ -22006, 24279 },
	{ -21403, 24812 },
	{ -20788, 25330 },
	{ -20160, 25833 },
	{ -19520, 26320 },
	{ -18868, 26791 },
	{ -18205, 27246 },
	{ -17531, 27684 },
	{ -16846, 28106 },
	{ -16151, 28511 },
	{ -15447, 28899 },
	{ -14733, 29269 },
	{ -14010, 29622 },
	{ -13279, 29957 },
	{ -12540, 30274 },
	{ -11793, 30572 },
	{ -11039, 30853 },
	{ -10279, 31114 },
	{ -9512, 31357 },
	{ -8740, 31581 },
	{ -7962, 31786 },
	{ -7180, 31972 },
	{ -6393, 32138 },
	{ -5602, 32286 },
	{ -4808, 32413 },
	{ -4011, 32522 },
	{ -3212, 32610 },
	{ -2411, 32679 },
	{ -1608, 32729 },
	{ -804, 32758 },
};
template<> DSP_INLINE const vcs* FFT_GetTwiddleConst<768, 3>() { return (vcs*)wFFTLUT768_3; }
__declspec(selectany) extern const short FFT12LUTMap[] =
{
	0, 4, 8, 2, 6, 10, 1, 5, 9, 3, 7, 11,
};
template<> DSP_INLINE short FFTLUTMapTable<12>(int i) { return FFT12LUTMap[i]; }
__declspec(selectany) extern const short FFT24LUTMap[] =
{
	0, 8, 16, 4, 12, 20, 2, 10, 18, 6, 14, 22, 1, 9, 17, 5, 13, 21, 3, 11, 19, 7, 15, 23,
};
template<> DSP_INLINE short FFTLUTMapTable<24>(int i) { return FFT24LUTMap[i]; }
__declspec(selectany) extern const short FFT48LUTMap[] =
{
	0, 24, 12, 36, 4, 28, 16, 40, 8, 32, 20, 44, 2, 26, 14, 38, 6, 30, 18, 42, 10, 34, 22, 46, 1, 25, 13, 37, 5, 29, 17, 41, 9, 33, 21, 45, 3, 27, 15, 39, 7, 31, 19, 43, 11, 35, 23, 47,
};
template<> DSP_INLINE short FFTLUTMapTable<48>(int i) { return FFT48LUTMap[i]; }
__declspec(selectany) extern const short FFT96LUTMap[] =
{
	0, 48, 24, 72, 8, 56, 32, 80, 16, 64, 40, 88, 4, 52, 28, 76, 12, 60, 36, 84, 20, 68, 44, 92, 2, 50, 26, 74, 10, 58, 34, 82, 18, 66, 42, 90, 6, 54, 30, 78, 14, 62, 38, 86, 22, 70, 46, 94, 1, 49, 25, 73, 9, 57, 33, 81, 17, 65, 41, 89, 5, 53, 29, 77, 13, 61, 37, 85, 21, 69, 45, 93, 3, 51, 27, 75, 11, 59, 35, 83, 19, 67, 43, 91, 7, 55, 31, 79, 15, 63, 39, 87, 23, 71, 47, 95,
};
template<> DSP_INLINE short FFTLUTMapTable<96>(int i) { return FFT96LUTMap[i]; }
__declspec(selectany) extern const short FFT192LUTMap[] =
{
	0, 96, 48, 144, 24, 120, 72, 168, 12, 108, 60, 156, 36, 132, 84, 180, 4, 100, 52, 148, 28, 124, 76, 172, 16, 112, 64, 160, 40, 136, 88, 184, 8, 104, 56, 152, 32, 128, 80, 176, 20, 116, 68, 164, 44, 140, 92, 188, 2, 98, 50, 146, 26, 122, 74, 170, 14, 110, 62, 158, 38, 134, 86, 182, 6, 102, 54, 150, 30, 126, 78, 174, 18, 114, 66, 162, 42, 138, 90, 186, 10, 106, 58, 154, 34, 130, 82, 178, 22, 118, 70, 166, 46, 142, 94, 190, 1, 97, 49, 145, 25, 121, 73, 169, 13, 109, 61, 157, 37, 133, 85, 181, 5, 101, 53, 149, 29, 125, 77, 173, 17, 113, 65, 161, 41, 137, 89, 185, 9, 105, 57, 153, 33, 129, 81, 177, 21, 117, 69, 165, 45, 141, 93, 189, 3, 99, 51, 147, 27, 123, 75, 171, 15, 111, 63, 159, 39, 135, 87, 183, 7, 103, 55, 151, 31, 127, 79, 175, 19, 115, 67, 163, 43, 139, 91, 187, 11, 107, 59, 155, 35, 131, 83, 179, 23, 119, 71, 167, 47, 143, 95, 191,
};
template<> DSP_INLINE short FFTLUTMapTable<192>(int i) { return FFT192LUTMap[i]; }
__declspec(selectany) extern const short FFT384LUTMap[] =
{
	0, 192, 96, 288, 48, 240, 144, 336, 24, 216, 120, 312, 72, 264, 168, 360, 8, 200, 104, 296, 56, 248, 152, 344, 32, 224, 128, 320, 80, 272, 176, 368, 16, 208, 112, 304, 64, 256, 160, 352, 40, 232, 136, 328, 88, 280, 184, 376, 4, 196, 100, 292, 52, 244, 148, 340, 28, 220, 124, 316, 76, 268, 172, 364, 12, 204, 108, 300, 60, 252, 156, 348, 36, 228, 132, 324, 84, 276, 180, 372, 20, 212, 116, 308, 68, 260, 164, 356, 44, 236, 140, 332, 92, 284, 188, 380, 2, 194, 98, 290, 50, 242, 146, 338, 26, 218, 122, 314, 74, 266, 170, 362, 10, 202, 106, 298, 58, 250, 154, 346, 34, 226, 130, 322, 82, 274, 178, 370, 18, 210, 114, 306, 66, 258, 162, 354, 42, 234, 138, 330, 90, 282, 186, 378, 6, 198, 102, 294, 54, 246, 150, 342, 30, 222, 126, 318, 78, 270, 174, 366, 14, 206, 110, 302, 62, 254, 158, 350, 38, 230, 134, 326, 86, 278, 182, 374, 22, 214, 118, 310, 70, 262, 166, 358, 46, 238, 142, 334, 94, 286, 190, 382, 1, 193, 97, 289, 49, 241, 145, 337, 25, 217, 121, 313, 73, 265, 169, 361, 9, 201, 105, 297, 57, 249, 153, 345, 33, 225, 129, 321, 81, 273, 177, 369, 17, 209, 113, 305, 65, 257, 161, 353, 41, 233, 137, 329, 89, 281, 185, 377, 5, 197, 101, 293, 53, 245, 149, 341, 29, 221, 125, 317, 77, 269, 173, 365, 13, 205, 109, 301, 61, 253, 157, 349, 37, 229, 133, 325, 85, 277, 181, 373, 21, 213, 117, 309, 69, 261, 165, 357, 45, 237, 141, 333, 93, 285, 189, 381, 3, 195, 99, 291, 51, 243, 147, 339, 27, 219, 123, 315, 75, 267, 171, 363, 11, 203, 107, 299, 59, 251, 155, 347, 35, 227, 131, 323, 83, 275, 179, 371, 19, 211, 115, 307, 67, 259, 163, 355, 43, 235, 139, 331, 91, 283, 187, 379, 7, 199, 103, 295, 55, 247, 151, 343, 31, 223, 127, 319, 79, 271, 175, 367, 15, 207, 111, 303, 63, 255, 159, 351, 39, 231, 135, 327, 87, 279, 183, 375, 23, 215, 119, 311, 71, 263, 167, 359, 47, 239, 143, 335, 95, 287, 191, 383,
};
template<> DSP_INLINE short FFTLUTMapTable<384>(int i) { return FFT384LUTMap[i]; }
__declspec(selectany) extern const short FFT768LUTMap[] =
{
	0, 384, 192, 576, 96, 480, 288, 672, 48, 432, 240, 624, 144, 528, 336, 720, 24, 408, 216, 600, 120, 504, 312, 696, 72, 456, 264, 648, 168, 552, 360, 744, 12, 396, 204, 588, 108, 492, 300, 684, 60, 444, 252, 636, 156, 540, 348, 732, 36, 420, 228, 612, 132, 516, 324, 708, 84, 468, 276, 660, 180, 564, 372, 756, 4, 388, 196, 580, 100, 484, 292, 676, 52, 436, 244, 628, 148, 532, 340, 724, 28, 412, 220, 604, 124, 508, 316, 700, 76, 460, 268, 652, 172, 556, 364, 748, 16, 400, 208, 592, 112, 496, 304, 688, 64, 448, 256, 640, 160, 544, 352, 736, 40, 424, 232, 616, 136, 520, 328, 712, 88, 472, 280, 664, 184, 568, 376, 760, 8, 392, 200, 584, 104, 488, 296, 680, 56, 440, 248, 632, 152, 536, 344, 728, 32, 416, 224, 608, 128, 512, 320, 704, 80, 464, 272, 656, 176, 560, 368, 752, 20, 404, 212, 596, 116, 500, 308, 692, 68, 452, 260, 644, 164, 548, 356, 740, 44, 428, 236, 620, 140, 524, 332, 716, 92, 476, 284, 668, 188, 572, 380, 764, 2, 386, 194, 578, 98, 482, 290, 674, 50, 434, 242, 626, 146, 530, 338, 722, 26, 410, 218, 602, 122, 506, 314, 698, 74, 458, 266, 650, 170, 554, 362, 746, 14, 398, 206, 590, 110, 494, 302, 686, 62, 446, 254, 638, 158, 542, 350, 734, 38, 422, 230, 614, 134, 518, 326, 710, 86, 470, 278, 662, 182, 566, 374, 758, 6, 390, 198, 582, 102, 486, 294, 678, 54, 438, 246, 630, 150, 534, 342, 726, 30, 414, 222, 606, 126, 510, 318, 702, 78, 462, 270, 654, 174, 558, 366, 750, 18, 402, 210, 594, 114, 498, 306, 690, 66, 450, 258, 642, 162, 546, 354, 738, 42, 426, 234, 618, 138, 522, 330, 714, 90, 474, 282, 666, 186, 570, 378, 762, 10, 394, 202, 586, 106, 490, 298, 682, 58, 442, 250, 634, 154, 538, 346, 730, 34, 418, 226, 610, 130, 514, 322, 706, 82, 466, 274, 658, 178, 562, 370, 754, 22, 406, 214, 598, 118, 502, 310, 694, 70, 454, 262, 646, 166, 550, 358, 742, 46, 430, 238, 622, 142, 526, 334, 718, 94, 478, 286, 670, 190, 574, 382, 766, 1, 385, 193, 577, 97, 481, 289, 673, 49, 433, 241, 625, 145, 529, 337, 721, 25, 409, 217, 601, 121, 505, 313, 697, 73, 457, 265, 649, 169, 553, 361, 745, 13, 397, 205, 589, 109, 493, 301, 685, 61, 445, 253, 637, 157, 541, 349, 733, 37, 421, 229, 613, 133, 517, 325, 709, 85, 469, 277, 661, 181, 565, 373, 757, 5, 389, 197, 581, 101, 485, 293, 677, 53, 437, 245, 629, 149, 533, 341, 725, 29, 413, 221, 605, 125, 509, 317, 701, 77, 461, 269, 653, 173, 557, 365, 749, 17, 401, 209, 593, 113, 497, 305, 689, 65, 449, 257, 641, 161, 545, 353, 737, 41, 425, 233, 617, 137, 521, 329, 713, 89, 473, 281, 665, 185, 569, 377, 761, 9, 393, 201, 585, 105, 489, 297, 681, 57, 441, 249, 633, 153, 537, 345, 729, 33, 417, 225, 609, 129, 513, 321, 705, 81, 465, 273, 657, 177, 561, 369, 753, 21, 405, 213, 597, 117, 501, 309, 693, 69, 453, 261, 645, 165, 549, 357, 741, 45, 429, 237, 621, 141, 525, 333, 717, 93, 477, 285, 669, 189, 573, 381, 765, 3, 387, 195, 579, 99, 483, 291, 675, 51, 435, 243, 627, 147, 531, 339, 723, 27, 411, 219, 603, 123, 507, 315, 699, 75, 459, 267, 651, 171, 555, 363, 747, 15, 399, 207, 591, 111, 495, 303, 687, 63, 447, 255, 639, 159, 543, 351, 735, 39, 423, 231, 615, 135, 519, 327, 711, 87, 471, 279, 663, 183, 567, 375, 759, 7, 391, 199, 583, 103, 487, 295, 679, 55, 439, 247, 631, 151, 535, 343, 727, 31, 415, 223, 607, 127, 511, 319, 703, 79, 463, 271, 655, 175, 559, 367, 751, 19, 403, 211, 595, 115, 499, 307, 691, 67, 451, 259, 643, 163, 547, 355, 739, 43, 427, 235, 619, 139, 523, 331, 715, 91, 475, 283, 667, 187, 571, 379, 763, 11, 395, 203, 587, 107, 491, 299, 683, 59, 443, 251, 635, 155, 539, 347, 731, 35, 419, 227, 611, 131, 515, 323, 707, 83, 467, 275, 659, 179, 563, 371, 755, 23, 407, 215, 599, 119, 503, 311, 695, 71, 455, 263, 647, 167, 551, 359, 743, 47, 431, 239, 623, 143, 527, 335, 719, 95, 479, 287, 671, 191, 575, 383, 767,
};
template<> DSP_INLINE short FFTLUTMapTable<768>(int i) { return FFT768LUTMap[i]; }

