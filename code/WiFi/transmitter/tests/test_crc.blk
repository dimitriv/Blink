-- 
-- Copyright (c) Microsoft Corporation
-- All rights reserved. 
--
-- Licensed under the Apache License, Version 2.0 (the ""License""); you
-- may not use this file except in compliance with the License. You may
-- obtain a copy of the License at
--
-- http://www.apache.org/licenses/LICENSE-2.0
--
-- THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR
-- CONDITIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT
-- LIMITATION ANY IMPLIED WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR
-- A PARTICULAR PURPOSE, MERCHANTABLITY OR NON-INFRINGEMENT.
--
-- See the Apache Version 2.0 License for specific language governing
-- permissions and limitations under the License.
--
--

#include "../crc.blk"


fun comp convert() {
var ai : arr[1] int8;
var ao : arr[8] bit;

  repeat{
    x<-take;
    do{
      ai[0] := x;
      int8_to_bits(ao, ai);
    }
    emits ao;
  }
}
    

fun comp crc_test() {
var crc_state:arr[CRC_S_WIDTH] bit;

  -- Initialize state
  x <- takes CRC_S_WIDTH;
  do{crc_state := x};

  --times (96*8 - CRC_S_WIDTH)/CRC_X_WIDTH {
  times (40 - CRC_S_WIDTH)/CRC_X_WIDTH {
    x <- takes CRC_X_WIDTH;
    do {
      --println crc_state[0], " ", crc_state[1], " ", crc_state[2], " ", x[0];
      update_crc_generic(x, base32, crc_state)
    };
  }
  do {
    update_crc_generic({'0,'0,'0,'0,'0,'0,'0,'0}, base32, crc_state);
    update_crc_generic({'0,'0,'0,'0,'0,'0,'0,'0}, base32, crc_state);
    update_crc_generic({'0,'0,'0,'0,'0,'0,'0,'0}, base32, crc_state);
    update_crc_generic({'0,'0,'0,'0,'0,'0,'0,'0}, base32, crc_state);
    println crc_state;
  };
    
}

let comp main = read >>> convert() >>> crc_test() >>> write[bit]
